stages:
  - build
  - deploy

打包:
  stage: build
  when: manual
  image: node:14-slim
  before_script:
    - npm config set registry https://registry.npm.taobao.org
    - npm config set disturl https://npm.taobao.org/dist
    - npm config set electron_mirror https://npm.taobao.org/mirrors/electron/
    - npm config set sass_binary_site https://npm.taobao.org/mirrors/node-sass/
    - npm config set phantomjs_cdnurl https://npm.taobao.org/mirrors/phantomjs/
    - npm config set chromedriver_cdnurl https://npm.taobao.org/mirrors/chromedriver/
    - npm config set operadriver_cdnurl https://npm.taobao.org/mirrors/operadriver/
    - npm config set python_mirror https://npm.taobao.org/mirrors/python/
    - npm config set electron_builder_binaries_mirror https://npm.taobao.org/mirrors/electron-builder-binaries/
    - npm config set node_sqlite3_binary_host_mirror https://npm.taobao.org/mirrors
    - npm config rm proxy
    - npm config rm https-proxy
    - npm config list
    # - sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories
    # - apk add python3 make gcc musl-dev g++ zlib-dev
  script:
    - npm install
    - npm run build:prod
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules/
  artifacts:
    paths:
    - dist/
  tags: [build]

部署:
  stage: deploy
  when: manual
  needs: [打包]
  before_script:
    - sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'which ssh-agent || ( apk update && apk add openssh-client)'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Use ssh-keyscan to scan the keys of your private server. Replace gitlab.com
    ## with your own domain name. You can copy and repeat that command if you have
    ## more than one server to connect to.
    ##
    - ssh-keyscan 124.71.162.177 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp -r ./dist/** root@124.71.162.177:/home/dist/admin/
  tags: [deploy]
